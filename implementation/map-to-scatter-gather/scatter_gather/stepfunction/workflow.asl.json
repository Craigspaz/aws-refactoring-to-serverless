{
  "Comment": "A description of my state machine",
  "StartAt": "requester",
  "States": {
    "requester": {
      "Type": "Task",
      "Resource": "${REQUESTER_ARN}",
      "ResultPath": "$",
      "ResultSelector": {
        "body.$": "States.StringToJson($.body)"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Next": "Map"
    },
    "Map": {
      "Type": "Map",
      "ItemProcessor": {
        "ProcessorConfig": {
          "Mode": "INLINE"
        },
        "StartAt": "responder",
        "States": {
          "responder": {
            "Type": "Task",
            "Resource": "${RESPONDER_ARN}",
            "ResultPath": "$",
            "ResultSelector": {
              "body.$": "$.body"
            },
            "Retry": [
              {
                "ErrorEquals": [
                  "Lambda.ServiceException",
                  "Lambda.AWSLambdaException",
                  "Lambda.SdkClientException",
                  "Lambda.TooManyRequestsException"
                ],
                "IntervalSeconds": 2,
                "MaxAttempts": 6,
                "BackoffRate": 2
              }
            ],
            "End": true
          }
        }
      },
      "Next": "aggregator",
      "ItemsPath": "$.body"
    },
    "aggregator": {
      "Type": "Task",
      "Resource": "${AGGREGATOR_ARN}",
      "Parameters": {
        "Records.$": "$"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "End": true
    }
  }
}